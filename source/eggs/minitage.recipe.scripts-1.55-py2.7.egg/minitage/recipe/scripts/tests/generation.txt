Generating all scripts
+++++++++++++++++++++++++++
Thus by not specifying any scripts entry in the buildout part.
::

    >>> init_env()
    >>> index_url = start_server(os.path.sep.join(tempdir))     
    >>> data = """
    ... [buildout]
    ... eggs-directory =${buildout:directory}/eggs
    ... download-cache=${buildout:directory}/dl
    ... parts = part
    ... [part]
    ... recipe=minitage.recipe.scripts
    ... find-links=%(index)s
    ... eggs=foo
    ... """%{'index': index_url}
    >>> touch('buildout.cfg', data=data)
    >>> noecho = [remove(os.path.join('eggs', egg)) for egg in os.listdir('eggs') if 'foo' in egg]
    >>> sh('bin/buildout -vvvvv install')
    b...
    minitage.recipe: Generated scripts: 's', 'toto.py'...

Look at what have been generated.
::

    >>> cat('bin', 'toto.py')
    #!...
    # ! GENERATED BY minitage.recipe !
    import os
    import sys
    import subprocess...
    sys.path[0:0] = ['/tmp/buildout.test/eggs/foo-1.0-py....egg' ]...
    # EXEC ORGINAL CODE WITHOUT SHEBANG
    __doc__  = 'I am generated by minitage.recipe.script recipe'...
    os.environ['PYTHONPATH'] = ':'.join(sys.path + os.environ.get('PYTHONPATH', '').split(':'))
    sys.argv.pop(0)
    sys.exit(
        subprocess.Popen(
            [sys.executable, '/tmp/buildout.test/eggs/foo-1.0-py....egg/EGG-INFO/scripts/toto.py']+sys.argv,
            env=os.environ
        ).wait()
    )...
    >>> cat('bin', 's')
    #!...
    #!!! #GENERATED VIA MINITAGE.recipe !!!...
    import sys...
    sys.path[0:0] = [ '/tmp/buildout.test/eggs/foo-1.0-py....egg' ]...
    import toto.toto...
    if __name__ == '__main__':
        toto.toto.f()...


