
===============================================
minitage.recipe.scripts
===============================================


Abstract
-----------------
    - This recipe intends to install eggs and python software and on top of installed stuff, generating scripts and envrionment files.
    - This recipe inherit from minitage;recipe:egg.
    - Its heavilly inspired by zc.recipe.eggs* and try to completly replace it whereas be API compatbile.
    - You can use it in conjunction with the buildout.minitagificator extension which monkey patch zc.buildout to use minitage recipes.
    - What we can do that zc.recipe.egg wouldnt do, either at all or not in the way we want to:

        * All scripts support initialisation code
        * The 'scripts' egg metadata is also handled
    - You can use it as you would use minitage.recipe:egg, use patch facility and etc.
    - Ths recipe is also declared under those entry points:

        * minitage.recipe:eggs
        * minitage.recipe:script

Specific options
-----------------

    * All the shared options and the options from minitage.recipe:egg +
    * scripts

        - Scripts to generate, if empty, generate scripts for all the working set.
        - If your egg have an old 'scripts' metadata, and old scripts where you want wrappers to be generated, just add the egg name to the scripts entry.
        - If you want to rename a script, just enter something like entrypoint|scriptname=NewName::

            s=NewName

    * zap
      If you do not want to a script, just enter a line separated list of not wanted scripts

    * entry-points
        A list of entry-point identifiers of the form:::

            name=module:attrs

        where name is a script name, module is a dotted name resolving to a module name, and attrs is a dotted name resolving to a callable object within a module.
        This option is useful when working with distributions that don't declare entry points, such as distributions not written to work with setuptools.

    * interpreter
        The name of a script to generate that allow access to the Python interpreter with the PYTHONPATH set with all the working set entries.
    * dependent-scripts
      When set to true, scripts will be generated for all required eggs in addition to the eggs named specifically. This idea came from two forks of this recipe, repoze.recipe.egg and pylons_sandbox, but the option name is spelled with a dash instead of underscore and it defaults to false.
    * (script-name|interpretername-)arguments
        Specify some arguments to be passed to entry points as Python source.
    * (script-name|interpretername-)initialization
        Python code to run prior to call the entry point
    * env_initialization
	     run code after initialization of env (shell)
    * template-replacements

        * replacements for variables values in templates to override buildout's strip mecanism  (initialization, env_initialization, arguments)
        * Spaces before and after => are important:
        * Pattern are in the form::

			re-pattern => value




