#if $with_ploneproduct_fss
#set $fsscomment=''
#else
#set $fsscomment='#'
#end if
[buildout]
#prefer-final = true
versions = versions

[versions]
# https://bugs.launchpad.net/singing-dancing/+bug/301082
#if $major < 4:
#zope.app.catalog = 3.5.2
#zope.component = 3.5.1
#zope.i18n = 3.6.0
#zope.sendmail = 3.5.1
#zope.testing = 3.7.1
#five.intid = 0.3.0
#zope.securitypolicy = 3.4.0
#zope.app.zcmlfiles = 3.4.3 
#end if


[zope2]
#fake-zope-eggs = true
#skip-fake-eggs +=
#    ZConfig
#    ZODB3
#    pytz
#    zope.container
#    zope.lifecycleevent
#    zope.intid

${fsscomment}[fss-newsletter]
${fsscomment}<= fss
${fsscomment}recipe = iw.recipe.fss
${fsscomment}zope-instances=\${instance-newsletter:location}

# Singing & dancing clock server enabled instance
[instance-newsletter]
<= instance
http-address = \${hosts:instance-newsletter}:\${ports:instance-newsletter}
zope-conf-additional=
    <clock-server>
    # the traversal path (from the Zope root) to an executable Zope method (Python Script, external method, product method, etc). The method must take no arguments.
    method /\${plone:site}/@@dancing.utils/tick_and_dispatch
    # within reverse proxy
    # method /VirtualHostBase/\${reverse_proxy:scheme}/\${reverse_proxy:host}:\${reverse_proxy:port}/\${plone:site}/VirtualHostRoot/@@dancing.utils/tick_and_dispatch
    #the number of seconds between each clock "tick" (and thus each call to the above "method"). The lowest number providable here is typically 30 (this is the asyncore mainloop "timeout" value).
    period 300
    user \${zope:user}
    password \${zope:password}
    #the hostname passed in via the "Host:" header in the faux request. Could be useful if you have virtual host rules set up inside Zope itself.
    host localhost
    </clock-server>

[mkdirs]
command +=
    mkdir -pv \${locations:testfss-backup-newsletter};
    mkdir -pv \${locations:testfss-storage-newsletter};
    mkdir -pv \${locations:fss-backup-newsletter};
    mkdir -pv \${locations:fss-storage-newsletter};
    mkdir -pv \${buildout:directory}/var/newsletter/mailqueue/cur;
    mkdir -pv \${buildout:directory}/var/newsletter/mailqueue/tmp;
    mkdir -pv \${buildout:directory}/var/newsletter/mailqueue/new;

# vim:set ft=cfg:
