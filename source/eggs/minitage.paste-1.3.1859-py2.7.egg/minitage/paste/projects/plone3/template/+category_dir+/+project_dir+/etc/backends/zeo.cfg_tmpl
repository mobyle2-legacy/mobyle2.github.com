# ZEO backend support and configuration

#if $zeo_port.strip():
#set $zeo_sep = ''
#else
#set $zeo_sep = ''
#end if
#if $with_zeo_socket:
#set zeoa = '${buildout:directory}/var/zeocl.sock'
#set zeoh = '#${hosts:zeo}:${ports:zeo}'
#else
#set zeoa= '${hosts:zeo}:${ports:zeo}'
#end if
#if $with_ploneproduct_paasync
#set $asynccomment=''
#else
#set $asynccomment='#'
#end if

[instance]
zeo-client-cache-size = \${cache:zeo-client-cache-size}
zeo-client = on
zeo-address = \${zeoserver:zeo-address}
temporary-storage =
    <zeoclient>
    server \${zeoserver:zeo-address}
        storage temp
        name zeostorage
        var \${buildout:directory}/var
    </zeoclient>
    mount-point /temp_folder
    container-class Products.TemporaryFolder.TemporaryContainer

# may be not used but it is good to have it in case.
[zeoserver]
#if $major < 4:
recipe = plone.recipe.zope2zeoserver
zope2-location = \${zope2:location}
#else
recipe = plone.recipe.zeoserver
#end if
#if $with_zeo_socket:
# zeo-address = $zeoh
#end if
zeo-address = $zeoa
socket-name =\${buildout:directory}/var/zeo.zdsock
zeo-conf-additional =
${asynccomment}    <filestorage 2>
${asynccomment}        path \${buildout:directory}/var/filestorage/Async.fs
${asynccomment}    </filestorage>
#if $major < 4:
    %import tempstorage
    <temporarystorage temp>
        name temporary storage for sessioning
    </temporarystorage>
#end if
eggs +=
#if $with_ploneproduct_paasync
    \${instance:eggs}
#end if
    ZopeUndo
    ZODB3


# vim:set ft=cfg:
